"""Script is being used for generating a database for WebApp"""
import logging
import psycopg2
from psycopg2.extras import execute_batch
from utils.get_data import scrapper

parent_logger = logging.getLogger("parent")
parent_logger.setLevel(logging.INFO)

TARGET_URL = 'https://www.linkedin.com/jobs-guest/jobs/api/seeMoreJobPostings/search?keywords=Python%20%28Programming%20Language%29&location=Las%20Vegas%2C%20Nevada%2C%20United%20States&geoId=100293800&currentJobId=3415227738&start={}'
TARGET_JOB_URL = 'https://www.linkedin.com/jobs-guest/jobs/api/jobPosting/{}'

namedict = scrapper(target_url=TARGET_URL, target_job_url=TARGET_JOB_URL)

# Connect to the database
conn = psycopg2.connect(
    host="localhost",
    database="postgres",
    user="postgres",
    password="123"
)

# Create a cursor object
cursor = conn.cursor()

CREATE_TABLE = """
    DROP TABLE IF EXISTS jobs;
    CREATE TABLE jobs (
        id INT GENERATED BY DEFAULT AS IDENTITY, 
        job_id varchar(255), 
        job_title varchar(255), 
        seniority_level varchar(255),
        job_location varchar(255),
        company_name varchar(255),
        tech_stack varchar(255),
        job_description TEXT);"""
cursor.execute(CREATE_TABLE)
logging.info('Table has been successfuly created')

INSERT_DATA = """INSERT INTO jobs VALUES (default, %(job_id)s,
        %(job_title)s, 
        %(seniority_level)s, 
        %(job_location)s, 
        %(company_name)s,
        %(tech_stack)s,
        %(job_description)s)"""

execute_batch(cursor, INSERT_DATA, namedict)
logging.info('Data has been successfuly inserted to table')

# Commit the transaction
conn.commit()

# Close the cursor and connection
cursor.close()
conn.close()
logging.info('Database has been successfuly created')
